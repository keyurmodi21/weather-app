{"version":3,"sources":["images/perth.jpg","Home/presentation/Forecast.jsx","Home/presentation/Home.jsx","Home/container/HomeContainer.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Forecast","date","this","props","forecastData","cod","timestampToTime","split","style","width","height","color","classes","roundUpTemperature","list","map","eachItem","index","dt","List","className","root","key","ListItem","ListItemAvatar","getCorrectIcon","ListItemText","primary","Typography","main","temp","React","PureComponent","withStyles","theme","minWidth","maxWidth","margin","position","alignContent","title","fontSize","subTitle","pos","marginBottom","overlay","top","left","backgroundColor","useStyles","makeStyles","borderRadius","media","boxShadow","content","textAlign","padding","content1","nexthour","background","marginTop","Home","weatherData","Card","CardMedia","image","CardContent","gutterBottom","name","sys","country","Date","toDateString","weather","variant","component","temp_max","Grid","container","spacing","item","xs","wind","speed","sunrise","humidity","temp_min","sunset","marginLeft","Paper","PostItemsContainer","timestamp","minutes","getMinutes","toString","length","getHours","temparture","Math","round","state","handleRetrieveWeather","handleRetrieveForecast","fetch","then","res","json","data","setState","response","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0e7adb22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/perth.e93bff1a.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/styles\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  WiTime1,\n  WiTime10,\n  WiTime11,\n  WiTime12,\n  WiTime2,\n  WiTime3,\n  WiTime4,\n  WiTime5,\n  WiTime6,\n  WiTime7,\n  WiTime8,\n  WiTime9\n} from \"react-icons/wi\";\n\nconst styles = theme => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 1200,\n    margin: \"0 auto\",\n    position: \"relative\",\n    alignContent: \"center\"\n  },\n  title: {\n    fontSize: 20\n  },\n  subTitle: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"20px\",\n    left: \"20px\",\n    color: \"black\",\n    backgroundColor: \"white\"\n  }\n});\n\nclass Forecast extends React.PureComponent {\n  getCorrectIcon(date) {\n    let icon;\n    if (this.props.forecastData.cod === \"200\") {\n      switch (this.props.timestampToTime(date).split(\":\")[0]) {\n        case \"1\":\n        case \"13\":\n          return (\n            <WiTime1\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"2\":\n        case \"14\":\n          return (\n            <WiTime2\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"3\":\n        case \"15\":\n          return (\n            <WiTime3\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"4\":\n        case \"16\":\n          return (\n            <WiTime4\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"5\":\n        case \"17\":\n          return (\n            <WiTime5\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"6\":\n        case \"18\":\n          return (\n            <WiTime6\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"7\":\n        case \"19\":\n          return (\n            <WiTime7\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"8\":\n        case \"20\":\n          return (\n            <WiTime8\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"9\":\n        case \"21\":\n          return (\n            <WiTime9\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"10\":\n        case \"22\":\n          return (\n            <WiTime10\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"11\":\n        case \"23\":\n          return (\n            <WiTime11\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        case \"12\":\n        case \"24\":\n          return (\n            <WiTime12\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                color: \"#49aaa0\"\n              }}\n            />\n          );\n\n        default:\n          return <div></div>;\n      }\n    }\n    return icon;\n  }\n\n  render() {\n    const {\n      props: { classes, forecastData, timestampToTime, roundUpTemperature }\n    } = this;\n\n    return (\n      <div>\n        <h3>Next 24 Hours forecast</h3>\n        {forecastData.cod === \"200\" ? (\n          <div>\n            {forecastData.list.map((eachItem, index) => {\n              const dt = eachItem.dt;\n\n              return (\n                <List className={classes.root} key={index}>\n                  <ListItem>\n                    <ListItemAvatar>{this.getCorrectIcon(dt)}</ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography>\n                          {timestampToTime(dt)}: {\"  \"}\n                          {roundUpTemperature(eachItem.main.temp)} &#8451;\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                </List>\n              );\n            })}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nForecast.propTypes = {\n  forecastData: PropTypes.object.isRequired,\n  timestampToTime: PropTypes.func.isRequired,\n  roundUpTemperature: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Forecast);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport image from \"../../images/perth.jpg\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport {\n  WiSunrise,\n  WiSunset,\n  WiHumidity,\n  WiWindy,\n  WiHot,\n  WiStars\n} from \"react-icons/wi\";\n\nimport Forecast from \"./Forecast\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: 1200,\n    margin: \"0 auto\",\n    position: \"relative\",\n    borderRadius: 20\n  },\n  title: {\n    fontSize: 20\n  },\n  subTitle: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  media: {\n    height: 350,\n    width: 1200,\n    margin: \"0 auto\"\n  },\n  list: {\n    boxShadow: \"0px 0px 10px -2px rgba(0,0,0,0.1)\",\n    borderRadius: 50,\n    margin: \"30px\"\n  },\n  content: {\n    textAlign: \"left\",\n    position: \"absolute\",\n    top: \"50px\",\n    left: \"40px\",\n    color: \"black\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: \"35px 45px\",\n    boxShadow: \"0px 0px 26px 0 rgba(0,0,0,0.2)\"\n  },\n  content1: {\n    textAlign: \"center\"\n  },\n  nexthour: {\n    background: \"#fff\",\n    borderRadius: \"20px\",\n    marginTop: \"-100px\",\n    boxShadow: \"0px 0px 10px -2px rgba(0,0,0,0.1)\",\n    padding: \"20px 30px 30px\"\n  }\n});\n\nexport default function Home(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      {props.weatherData.cod === 200 ? (\n        <Card\n          className={classes.root}\n          style={{ boxShadow: \"0px 0px 10px -2px rgba(0,0,0,0.1)\" }}\n        >\n          <CardMedia className={classes.media} image={image} title=\"Perth\" />\n          <CardContent className={classes.content}>\n            <Typography\n              className={classes.title}\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              {props.weatherData.name}, {props.weatherData.sys.country}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {new Date().toDateString()},\n              <b> {props.weatherData.weather[0].main}</b>\n            </Typography>\n            <Typography variant=\"h3\" component=\"p\">\n              {props.roundUpTemperature(props.weatherData.main.temp)}&#8451;\n              <br />\n            </Typography>\n\n            <Typography\n              className={classes.subTitle}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              Feels Like:{\" \"}\n              {props.roundUpTemperature(props.weatherData.main.temp_max)}&#8451;\n            </Typography>\n          </CardContent>\n          <CardContent className={classes.content1}>\n            <Grid container spacing={2}>\n              <Grid item xs={3}>\n                <List className={classes.root}>\n                  <ListItem className={classes.list}>\n                    <ListItemAvatar>\n                      <WiWindy\n                        style={{\n                          width: \"60px\",\n                          height: \"60px\",\n                          color: \"#49aaa0\"\n                        }}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography>\n                          Winds: {props.weatherData.wind.speed} m/s\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                  <ListItem className={classes.list}>\n                    <ListItemAvatar>\n                      <WiHot\n                        style={{\n                          width: \"60px\",\n                          height: \"60px\",\n                          color: \"#49aaa0\"\n                        }}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography>\n                          High:{\" \"}\n                          {props.roundUpTemperature(\n                            props.weatherData.main.temp_max\n                          )}\n                          &#8451;\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                  <ListItem className={classes.list}>\n                    <ListItemAvatar>\n                      <WiSunrise\n                        style={{\n                          width: \"60px\",\n                          height: \"60px\",\n                          color: \"#49aaa0\"\n                        }}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography>\n                          Sunrise:{\" \"}\n                          {props.timestampToTime(props.weatherData.sys.sunrise)}\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                </List>\n              </Grid>\n              <Grid item xs={3}>\n                <List className={classes.root}>\n                  <ListItem className={classes.list}>\n                    <ListItemAvatar>\n                      <WiHumidity\n                        style={{\n                          width: \"60px\",\n                          height: \"60px\",\n                          color: \"#49aaa0\"\n                        }}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography>\n                          Humidity: {props.weatherData.main.humidity}%\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                  <ListItem className={classes.list}>\n                    <ListItemAvatar>\n                      <WiStars\n                        style={{\n                          width: \"60px\",\n                          height: \"60px\",\n                          color: \"#49aaa0\"\n                        }}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography>\n                          Low:{\" \"}\n                          {props.roundUpTemperature(\n                            props.weatherData.main.temp_min\n                          )}\n                          &#8451;\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                  <ListItem className={classes.list}>\n                    <ListItemAvatar>\n                      <WiSunset\n                        style={{\n                          width: \"60px\",\n                          height: \"60px\",\n                          color: \"#49aaa0\"\n                        }}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography>\n                          Sunset:{\" \"}\n                          {props.timestampToTime(props.weatherData.sys.sunset)}\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                </List>\n              </Grid>\n              <Grid item xs={1}></Grid>\n              <Grid\n                item\n                xs={4}\n                style={{ marginLeft: \"30px\", marginBottom: \"30px\" }}\n              >\n                <Paper className={classes.nexthour}>\n                  <Forecast\n                    forecastData={props.forecastData}\n                    timestampToTime={props.timestampToTime}\n                    roundUpTemperature={props.roundUpTemperature}\n                  />\n                </Paper>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      ) : null}\n    </div>\n  );\n}\n\nHome.propTypes = {\n  weatherData: PropTypes.object.isRequired,\n  forecastData: PropTypes.object.isRequired,\n  timestampToTime: PropTypes.func.isRequired,\n  roundUpTemperature: PropTypes.func.isRequired\n};\n","import React from \"react\";\n\nimport Home from \"../presentation/Home\";\n\nexport default class PostItemsContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weatherData: {},\n      forecastData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.handleRetrieveWeather();\n    this.handleRetrieveForecast();\n  }\n\n  handleRetrieveWeather() {\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/weather?q=Perth,Australia&units=metric&appid=6dc9c2a99870e8a1a5ff5c72ecc15d4e\"\n    )\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ weatherData: data });\n      });\n  }\n\n  async handleRetrieveForecast() {\n    const response = await fetch(\n      \"https://api.openweathermap.org/data/2.5/forecast/?q=Perth,Australia&cnt=5&units=metric&appid=6dc9c2a99870e8a1a5ff5c72ecc15d4e\"\n    );\n\n    const data = await response.json();\n\n    this.setState({ forecastData: data });\n  }\n\n  timestampToTime = timestamp => {\n    const date = new Date(timestamp * 1000);\n    let minutes = date.getMinutes();\n\n    if (minutes.toString().length <= 1) {\n      minutes = `0${date.getMinutes()}`;\n    }\n    return `${date.getHours()}:${minutes}`;\n  };\n  \n  roundUpTemperature = temparture => {\n    return Math.round(temparture);\n  };\n\n  render() {\n    const {\n      state: { weatherData, forecastData },\n      timestampToTime,\n      roundUpTemperature\n    } = this;\n\n    return (\n      <Home\n        weatherData={weatherData}\n        timestampToTime={timestampToTime}\n        forecastData={forecastData}\n        roundUpTemperature={roundUpTemperature}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { HomeContainer } from \"./Home\";\n\nfunction App() {\n  return <HomeContainer />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}